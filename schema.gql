# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateProductInput {
  description: String!
  name: String!
  price: Float!
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

input GetProductInput {
  productId: String!
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
  deleteProduct(id: String!): Product!
  updateUser(input: UpdateUserInput!): User!
}

"""
A field whose value conforms with the standard mongodb object ID as described here: https://docs.mongodb.com/manual/reference/method/ObjectId/#ObjectId. Example: 5e5677d71bdc2ae76344968c
"""
scalar ObjectID

input PaginatedInputOptions {
  lean: Boolean = true
  limit: Float = 10
  offset: Float = 0
  page: Float = 1
  pagination: Boolean = true
  populate: String
  select: String
  sort: String
}

type PaginatedProducts {
  docs: [Product!]!
  hasNextPage: Boolean!
  hasPrevPage: Boolean!
  limit: Float!
  nextPage: Float
  page: Float!
  pagingCounter: Float!
  prevPage: Float
  totalDocs: Float!
  totalPages: Float!
}

type Product {
  _id: ObjectID!
  description: String!
  name: String!
  price: String!
  productId: String!
  user: User!
}

type Query {
  findClient(input: String!): User!
  me: User
  product(input: GetProductInput!): Product
  products(pagination: PaginatedInputOptions): PaginatedProducts!
}

input UpdateUserInput {
  email: EmailAddress!
  name: String
}

type User {
  _id: ObjectID!
  email: EmailAddress!
  name: String
  roles: [String!]!
}
